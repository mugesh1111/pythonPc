# Merge function
def merge(arr, l, m, r):
    n1 = m - l + 1
    n2 = r - m

    # Create temp arrays
    L = [0] * n1
    R = [0] * n2

    # Copy data to temp arrays
    for i in range(n1):
        L[i] = arr[l + i]
    for j in range(n2):
        R[j] = arr[m + 1 + j]

    # Merge the temp arrays back into arr[l..r]
    i = j = 0  # Initial indexes for L and R
    k = l      # Initial index for merged array

    while i < n1 and j < n2:
        if L[i] <= R[j]:
            arr[k] = L[i]
            i += 1
        else:
            arr[k] = R[j]
            j += 1
        k += 1

    # Copy any remaining elements of L[]
    while i < n1:
        arr[k] = L[i]
        i += 1
        k += 1

    # Copy any remaining elements of R[]
    while j < n2:
        arr[k] = R[j]
        j += 1
        k += 1


# MergeSort function
def mergeSort(arr, l, r):
    if l < r:
        m = (l + r) // 2
        mergeSort(arr, l, m)
        mergeSort(arr, m + 1, r)
        merge(arr, l, m, r)


# Driver code
arr = [12, 11, 13, 5, 6, 7]
print("Given array is:")
print(*arr)

mergeSort(arr, 0, len(arr) - 1)

print("\nSorted array is:")
print(*arr)